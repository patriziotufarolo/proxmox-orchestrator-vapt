# Generated by Django 2.1 on 2018-09-01 14:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import orchestrator.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_identifier', models.CharField(max_length=15, verbose_name='Codice attivita')),
                ('target_application_identifier', models.CharField(max_length=10, verbose_name='Codice Applicazione')),
                ('target_application_name', models.CharField(max_length=50, verbose_name='Nome applicazione')),
            ],
            options={
                'verbose_name': 'Attività',
                'verbose_name_plural': 'Attività',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nome azienda')),
            ],
            options={
                'verbose_name': 'Azienda',
                'verbose_name_plural': 'Aziende',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_description', models.CharField(max_length=20, verbose_name='Descrizione')),
                ('bridge_name', models.CharField(max_length=5, verbose_name='Nome bridge')),
            ],
            options={
                'verbose_name': 'Rete',
                'verbose_name_plural': 'Reti',
            },
        ),
        migrations.CreateModel(
            name='Tester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nome completo')),
                ('tester_identifier', models.CharField(max_length=10, verbose_name='Matricola')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Testers', to='orchestrator.Company', verbose_name='Azienda')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Tester', to=settings.AUTH_USER_MODEL, verbose_name='Utenza portale')),
            ],
        ),
        migrations.CreateModel(
            name='TesterIpAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(protocol='IPv4', verbose_name='Indirizzo IP')),
                ('cidr', orchestrator.fields.IntegerRangeField(default=25, verbose_name='CIDR')),
                ('tester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ip', to='orchestrator.Tester')),
            ],
            options={
                'verbose_name': 'Indirizzo IP',
                'verbose_name_plural': 'Indirizzi IP',
            },
        ),
        migrations.CreateModel(
            name='VirtualMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nome')),
                ('os', models.CharField(choices=[('Win7', 'Windows 7'), ('Win10', 'Windows 10'), ('Kali', 'Kali Linux')], max_length=20, verbose_name='Sistema operativo')),
                ('ram', orchestrator.fields.IntegerRangeField(verbose_name='RAM (MB)')),
                ('cpu', orchestrator.fields.IntegerRangeField(verbose_name='CPU')),
                ('activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vms', to='orchestrator.Activity', verbose_name='Attività')),
            ],
            options={
                'verbose_name': 'Macchina virtuale',
                'verbose_name_plural': 'Macchine virtuali',
            },
        ),
        migrations.CreateModel(
            name='VMNet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orchestrator.TesterIpAddress', verbose_name='Indirizzo IP')),
                ('net', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orchestrator.Network')),
                ('vm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orchestrator.VirtualMachine')),
            ],
        ),
        migrations.AddField(
            model_name='virtualmachine',
            name='network',
            field=models.ManyToManyField(related_name='vms', through='orchestrator.VMNet', to='orchestrator.Network', verbose_name='Reti'),
        ),
        migrations.AddField(
            model_name='activity',
            name='testers',
            field=models.ManyToManyField(related_name='Attività', to='orchestrator.Tester'),
        ),
        migrations.AlterUniqueTogether(
            name='vmnet',
            unique_together={('net', 'vm')},
        ),
    ]
